// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

//npx prisma datasource-provider mongodb
//after creating a model run npx prisma db push

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Customer {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  email          String?      @unique
  customerType   CustomerType
  firstName      String
  lastName       String
  gender         Gender
  maxCreditLimit Float
  maxCreditDays  Int
  taxPin         String?
  dob            DateTime?
  nin            String?      @unique
  country        String
  location       String
  phone          String       @unique
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

enum CustomerType {
  RETAIL
  WHOLESALE
  DISTRIBUTOR
  OTHER
}

model Supplier {
  id                String       @id @default(auto()) @map("_id") @db.ObjectId
  email             String?      @unique
  name              String
  supplierType      SupplierType
  contactPerson     String
  website           String?
  taxPin            String?
  country           String
  location          String
  notes             String?
  rating            Float?
  logo              String?      @default("https://imgs.search.brave.com/sVrBjra-WLtml3sniXKBwSe7fQ3sJyKHHqw7lRl6D8o/rs:fit:860:0:0:0/g:ce/aHR0cHM6Ly9jbGlw/YXJ0LWxpYnJhcnku/Y29tL25ld19nYWxs/ZXJ5LzMtMzc0NTBf/bG9nby1mcmVlLWlj/b25zLWltYWdlcy1w/bmcucG5n")
  paymentTerms      String?
  bankName          String?
  bankAccountNumber String?
  regNumber         String?      @unique
  phone             String       @unique
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
}

enum SupplierType {
  MANUFACTURER
  WHOLESALER
  DISTRIBUTOR
  RETAILER
  OTHER
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  username  String    @unique
  password  String
  firstName String
  lastName  String
  phone     String    @unique
  dob       DateTime?
  gender    Gender
  image     String?
  role      Role      @default(ATTENDANT)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  shop      Shop[]
}

enum Gender {
  MALE
  FEMALE
}

enum Role {
  ADMIN
  ATTENDANT
}

model Shop {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  location      String
  slug          String   @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  adminId       String   @db.ObjectId
  admin         User     @relation(fields: [adminId], references: [id])
  attendantsIds String[] @db.ObjectId
}
