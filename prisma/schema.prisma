// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

//npx prisma datasource-provider mongodb
//after creating a model run npx prisma db push

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Customer {
  id                 String       @id @default(auto()) @map("_id") @db.ObjectId
  email              String?      @unique
  customerType       CustomerType
  firstName          String
  lastName           String
  gender             Gender
  maxCreditLimit     Float
  maxCreditDays      Int
  unPaidCreditAmount Int?         @default(0)
  taxPin             String?
  dob                DateTime?
  nin                String?      @unique
  country            String
  location           String
  phone              String       @unique
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
  Sale               Sale[]
}

enum CustomerType {
  RETAIL
  WHOLESALE
  DISTRIBUTOR
  OTHER
}

model Supplier {
  id                String       @id @default(auto()) @map("_id") @db.ObjectId
  email             String?      @unique
  name              String
  supplierType      SupplierType
  contactPerson     String
  website           String?
  taxPin            String?
  country           String
  location          String
  notes             String?
  rating            Float?
  logo              String?      @default("https://imgs.search.brave.com/sVrBjra-WLtml3sniXKBwSe7fQ3sJyKHHqw7lRl6D8o/rs:fit:860:0:0:0/g:ce/aHR0cHM6Ly9jbGlw/YXJ0LWxpYnJhcnku/Y29tL25ld19nYWxs/ZXJ5LzMtMzc0NTBf/bG9nby1mcmVlLWlj/b25zLWltYWdlcy1w/bmcucG5n")
  paymentTerms      String?
  bankName          String?
  bankAccountNumber String?
  regNumber         String?      @unique
  phone             String       @unique
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  Product           Product[]
}

enum SupplierType {
  MANUFACTURER
  WHOLESALER
  DISTRIBUTOR
  RETAILER
  OTHER
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  username  String    @unique
  password  String
  firstName String
  lastName  String
  phone     String    @unique
  dob       DateTime?
  gender    Gender
  image     String?
  role      Role      @default(ATTENDANT)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  shop      Shop[]
}

enum Gender {
  MALE
  FEMALE
}

enum Role {
  ADMIN
  ATTENDANT
}

model Shop {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  location      String
  slug          String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  adminId       String    @db.ObjectId
  admin         User      @relation(fields: [adminId], references: [id])
  attendantsIds String[]  @db.ObjectId
  Product       Product[]
}

model Unit {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  abbreviation String
  slug         String    @unique
  products     Product[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Brand {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  slug      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  slug      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String?
  expiryDate     DateTime
  batchNumber    String?
  barCode        String?   @unique
  image          String?
  alertQty       Int
  tax            Int?
  stockQty       Int
  price          Int
  wholesaleprice Int       @default(0)
  buyingPrice    Int?
  sku            String    @unique
  productCode    String    @unique
  slug           String    @unique
  supplierId     String    @db.ObjectId
  shopId         String    @default("66d5e1683f7c613c378acd39") @db.ObjectId
  supplier       Supplier  @relation(fields: [supplierId], references: [id])
  Unit           Unit?     @relation(fields: [unitId], references: [id])
  Shop           Shop?     @relation(fields: [shopId], references: [id])
  unitId         String?   @db.ObjectId
  Brand          Brand?    @relation(fields: [brandId], references: [id])
  brandId        String?   @db.ObjectId
  Category       Category? @relation(fields: [categoryId], references: [id])
  categoryId     String?   @db.ObjectId
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  SaleItem SaleItem[]
}

model Sale {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  customerId      String        @db.ObjectId
  customerName    String?
  saleNumber      String        @unique
  customerEmail   String?
  saleAmount      Int
  balanceAmount   Int?          @default(0)
  paidAmount      Int
  status          OrderStatus   @default(PROCESSING)
  saleType        PaymentStatus @default(CREDIT)
  paymentMethod   PaymentMethod @default(MOBILEMONEY)
  transactionCode String?
  salesItem       SaleItem[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  customer Customer @relation(fields: [customerId], references: [id])
}

enum PaymentMethod {
  CASH
  MOBILEMONEY
}

enum PaymentStatus {
  PAID
  CREDIT
}

enum OrderStatus {
  SHIPPED
  TRANSPORTED
  PROCESSING
  DELIVERED
  ONTHEWAY
}

model SaleItem {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  saleId       String   @db.ObjectId
  productId    String   @db.ObjectId
  qty          Int
  productPrice Float
  productName  String
  productImage String
  createdAt    DateTime @default(now())
  updatedAt    DateTime

  product Product @relation(fields: [productId], references: [id])
  sale    Sale    @relation(fields: [saleId], references: [id])
}
